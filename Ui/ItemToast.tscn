[gd_scene load_steps=10 format=2]

[ext_resource path="res://Assets/Props/card2.png" type="Texture" id=1]
[ext_resource path="res://spaceTheme.tres" type="Theme" id=2]
[ext_resource path="res://Ui/ItemToast.gd" type="Script" id=3]
[ext_resource path="res://items/food.tres" type="Resource" id=4]
[ext_resource path="res://Assets/Poppins-Regular.ttf" type="DynamicFontData" id=5]

[sub_resource type="DynamicFont" id=1]
size = 14
use_filter = true
extra_spacing_char = 2
font_data = ExtResource( 5 )

[sub_resource type="DynamicFont" id=2]
size = 10
use_filter = true
font_data = ExtResource( 5 )

[sub_resource type="Animation" id=3]
resource_name = "enter"
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath(".:rect_position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( -2, -2 ),
"update": 0,
"values": [ Vector2( -161.574, 0 ), Vector2( 0, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="Animation" id=4]
resource_name = "exit"
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath(".:rect_position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( -2, -2 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( 124.734, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}
tracks/2/type = "method"
tracks/2/path = NodePath(".")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0.5 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "queue_free"
} ]
}

[node name="ItemToast" type="MarginContainer"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_right = -480.0
margin_bottom = -290.0
rect_min_size = Vector2( 150, 60 )
size_flags_horizontal = 4
size_flags_vertical = 0
theme = ExtResource( 2 )
custom_constants/margin_right = 5
custom_constants/margin_top = 5
custom_constants/margin_left = 5
custom_constants/margin_bottom = 5
script = ExtResource( 3 )
__meta__ = {
"_edit_use_anchors_": false
}
item = ExtResource( 4 )
timeDuration = 2.0

[node name="HSplitContainer" type="HSplitContainer" parent="."]
margin_left = 5.0
margin_top = 5.0
margin_right = 159.0
margin_bottom = 67.0
split_offset = 8
dragger_visibility = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CenterContainer" type="CenterContainer" parent="HSplitContainer"]
margin_right = 50.0
margin_bottom = 62.0
rect_min_size = Vector2( 50, 60 )

[node name="texture" type="TextureRect" parent="HSplitContainer/CenterContainer"]
margin_right = 50.0
margin_bottom = 60.0
rect_min_size = Vector2( 50, 60 )
texture = ExtResource( 1 )
expand = true
stretch_mode = 6

[node name="MarginContainer" type="MarginContainer" parent="HSplitContainer"]
margin_left = 50.0
margin_right = 154.0
margin_bottom = 62.0
custom_constants/margin_right = 2
custom_constants/margin_top = 1
custom_constants/margin_left = 2
custom_constants/margin_bottom = 1

[node name="VSplitContainer" type="VSplitContainer" parent="HSplitContainer/MarginContainer"]
margin_left = 2.0
margin_top = 1.0
margin_right = 102.0
margin_bottom = 61.0
rect_min_size = Vector2( 100, 60 )
custom_constants/separation = 0
split_offset = 1

[node name="name" type="Label" parent="HSplitContainer/MarginContainer/VSplitContainer"]
margin_right = 100.0
margin_bottom = 20.0
custom_fonts/font = SubResource( 1 )
text = "ITEM NAME"
align = 1
valign = 1
uppercase = true

[node name="description" type="RichTextLabel" parent="HSplitContainer/MarginContainer/VSplitContainer"]
margin_top = 29.0
margin_right = 100.0
margin_bottom = 60.0
custom_fonts/normal_font = SubResource( 2 )
meta_underlined = false
text = "item description"
scroll_active = false

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
autoplay = "enter"
anims/enter = SubResource( 3 )
anims/exit = SubResource( 4 )

[node name="Timer" type="Timer" parent="."]
[connection signal="timeout" from="Timer" to="." method="_on_Timer_timeout"]
